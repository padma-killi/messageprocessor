//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.03 at 10:49:14 EST 
//


package com.tcs.ain.mp.ppf.jaxb;


import com.tcs.ain.mp.ppf.jaxb.impl.TransactionImpl;
import com.tcs.ain.mp.ppf.jaxb.impl.TransactionTypeImpl;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the gov.fda.furls.mp.ppf.jaxb package. <p>An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions, element declarations and model groups.  Factory methods for each of these are provided in this class.
 * 
 */
public class ObjectFactory
    extends com.sun.xml.bind.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();

    static {
        defaultImplementations.put((TransactionType.DataAreaType.SimpleTextMailingType.MailingAddressType.class), (TransactionTypeImpl.DataAreaTypeImpl.SimpleTextMailingTypeImpl.MailingAddressTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.AddressesType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.AddressesTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.HumanProductListType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.HumanProductListTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.AccountRegistrationLinkType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.AccountRegistrationLinkTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.MailToAddressesType.MailToAddressType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.MailToAddressesTypeImpl.MailToAddressTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.SimpleTextMailingType.class), (TransactionTypeImpl.DataAreaTypeImpl.SimpleTextMailingTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.class), (TransactionTypeImpl.DataAreaTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.EstablishmentDescType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.EstablishmentTypesTypeImpl.EstablishmentDescTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.MailToAddressesType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.MailToAddressesTypeImpl.class));
        defaultImplementations.put((TransactionType.ControlAreaType.class), (TransactionTypeImpl.ControlAreaTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.EstablishmentTypesTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.RegistrationMailingType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.MailingTypesTypeImpl.RegistrationMailingsTypeImpl.RegistrationMailingTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.AnimalProductListType.ProdAnimalDescType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.AnimalProductListTypeImpl.ProdAnimalDescTypeImpl.class));
        defaultImplementations.put((TransactionType.class), (TransactionTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.MailingTypesType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.MailingTypesTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.MailingTypesTypeImpl.RegistrationMailingsTypeImpl.class));
        defaultImplementations.put((Transaction.class), (TransactionImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.AnimalProductListType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.AnimalProductListTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.ExceptionsType.ExceptionType.class), (TransactionTypeImpl.DataAreaTypeImpl.ExceptionsTypeImpl.ExceptionTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.AddressesType.AddressType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.AddressesTypeImpl.AddressTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.ExceptionsType.class), (TransactionTypeImpl.DataAreaTypeImpl.ExceptionsTypeImpl.class));
        defaultImplementations.put((TransactionType.DataAreaType.RegistrationType.HumanProductListType.ProdHumanDescType.class), (TransactionTypeImpl.DataAreaTypeImpl.RegistrationTypeImpl.HumanProductListTypeImpl.ProdHumanDescTypeImpl.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gov.fda.furls.mp.ppf.jaxb
     * 
     */
    public ObjectFactory() {
        super(new ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @return the value of the requested property
     * @throws PropertyException when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @param value the value of the property to be set
     * @throws PropertyException when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeSimpleTextMailingTypeMailingAddressType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.SimpleTextMailingType.MailingAddressType createTransactionTypeDataAreaTypeSimpleTextMailingTypeMailingAddressType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.SimpleTextMailingType.MailingAddressType) newInstance((TransactionType.DataAreaType.SimpleTextMailingType.MailingAddressType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeAddressesType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.AddressesType createTransactionTypeDataAreaTypeRegistrationTypeAddressesType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.AddressesType) newInstance((TransactionType.DataAreaType.RegistrationType.AddressesType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType createTransactionTypeDataAreaTypeRegistrationType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType) newInstance((TransactionType.DataAreaType.RegistrationType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeHumanProductListType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.HumanProductListType createTransactionTypeDataAreaTypeRegistrationTypeHumanProductListType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.HumanProductListType) newInstance((TransactionType.DataAreaType.RegistrationType.HumanProductListType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeAccountRegistrationLinkType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.AccountRegistrationLinkType createTransactionTypeDataAreaTypeRegistrationTypeAccountRegistrationLinkType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.AccountRegistrationLinkType) newInstance((TransactionType.DataAreaType.RegistrationType.AccountRegistrationLinkType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeMailToAddressesTypeMailToAddressType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.MailToAddressesType.MailToAddressType createTransactionTypeDataAreaTypeRegistrationTypeMailToAddressesTypeMailToAddressType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.MailToAddressesType.MailToAddressType) newInstance((TransactionType.DataAreaType.RegistrationType.MailToAddressesType.MailToAddressType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeSimpleTextMailingType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.SimpleTextMailingType createTransactionTypeDataAreaTypeSimpleTextMailingType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.SimpleTextMailingType) newInstance((TransactionType.DataAreaType.SimpleTextMailingType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType createTransactionTypeDataAreaType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType) newInstance((TransactionType.DataAreaType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeEstablishmentTypesTypeEstablishmentDescType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.EstablishmentDescType createTransactionTypeDataAreaTypeRegistrationTypeEstablishmentTypesTypeEstablishmentDescType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.EstablishmentDescType) newInstance((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.EstablishmentDescType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeMailToAddressesType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.MailToAddressesType createTransactionTypeDataAreaTypeRegistrationTypeMailToAddressesType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.MailToAddressesType) newInstance((TransactionType.DataAreaType.RegistrationType.MailToAddressesType.class)));
    }

    /**
     * Create an instance of TransactionTypeControlAreaType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.ControlAreaType createTransactionTypeControlAreaType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.ControlAreaType) newInstance((TransactionType.ControlAreaType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeEstablishmentTypesType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType createTransactionTypeDataAreaTypeRegistrationTypeEstablishmentTypesType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType) newInstance((TransactionType.DataAreaType.RegistrationType.EstablishmentTypesType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeMailingTypesTypeRegistrationMailingsTypeRegistrationMailingType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.RegistrationMailingType createTransactionTypeDataAreaTypeRegistrationTypeMailingTypesTypeRegistrationMailingsTypeRegistrationMailingType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.RegistrationMailingType) newInstance((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.RegistrationMailingType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeAnimalProductListTypeProdAnimalDescType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.AnimalProductListType.ProdAnimalDescType createTransactionTypeDataAreaTypeRegistrationTypeAnimalProductListTypeProdAnimalDescType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.AnimalProductListType.ProdAnimalDescType) newInstance((TransactionType.DataAreaType.RegistrationType.AnimalProductListType.ProdAnimalDescType.class)));
    }

    /**
     * Create an instance of TransactionType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType createTransactionType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType) newInstance((TransactionType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeMailingTypesType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.MailingTypesType createTransactionTypeDataAreaTypeRegistrationTypeMailingTypesType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.MailingTypesType) newInstance((TransactionType.DataAreaType.RegistrationType.MailingTypesType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeMailingTypesTypeRegistrationMailingsType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType createTransactionTypeDataAreaTypeRegistrationTypeMailingTypesTypeRegistrationMailingsType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType) newInstance((TransactionType.DataAreaType.RegistrationType.MailingTypesType.RegistrationMailingsType.class)));
    }

    /**
     * Create an instance of Transaction
     * 
     * @throws JAXBException if an error occurs
     */
    public Transaction createTransaction()
        throws javax.xml.bind.JAXBException
    {
        return ((Transaction) newInstance((Transaction.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeAnimalProductListType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.AnimalProductListType createTransactionTypeDataAreaTypeRegistrationTypeAnimalProductListType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.AnimalProductListType) newInstance((TransactionType.DataAreaType.RegistrationType.AnimalProductListType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeExceptionsTypeExceptionType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.ExceptionsType.ExceptionType createTransactionTypeDataAreaTypeExceptionsTypeExceptionType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.ExceptionsType.ExceptionType) newInstance((TransactionType.DataAreaType.ExceptionsType.ExceptionType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeAddressesTypeAddressType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.AddressesType.AddressType createTransactionTypeDataAreaTypeRegistrationTypeAddressesTypeAddressType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.AddressesType.AddressType) newInstance((TransactionType.DataAreaType.RegistrationType.AddressesType.AddressType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeExceptionsType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.ExceptionsType createTransactionTypeDataAreaTypeExceptionsType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.ExceptionsType) newInstance((TransactionType.DataAreaType.ExceptionsType.class)));
    }

    /**
     * Create an instance of TransactionTypeDataAreaTypeRegistrationTypeHumanProductListTypeProdHumanDescType
     * 
     * @throws JAXBException if an error occurs
     */
    public TransactionType.DataAreaType.RegistrationType.HumanProductListType.ProdHumanDescType createTransactionTypeDataAreaTypeRegistrationTypeHumanProductListTypeProdHumanDescType()
        throws javax.xml.bind.JAXBException
    {
        return ((TransactionType.DataAreaType.RegistrationType.HumanProductListType.ProdHumanDescType) newInstance((TransactionType.DataAreaType.RegistrationType.HumanProductListType.ProdHumanDescType.class)));
    }

    private static class GrammarInfoImpl
        extends com.sun.xml.bind.GrammarInfo
    {


        public java.lang.Class getDefaultImplementation(java.lang.Class javaContentInterface) {
            return ((java.lang.Class) defaultImplementations.get(javaContentInterface));
        }

        public java.lang.Class getRootElement(java.lang.String uri, java.lang.String local) {
            if (("" == uri)&&("Transaction" == local)) {
                return (TransactionImpl.class);
            }
            return null;
        }

        public java.lang.String[] getProbePoints() {
            return new java.lang.String[] {"", "Transaction"};
        }

    }

}
